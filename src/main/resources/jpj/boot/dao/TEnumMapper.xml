<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jpj.boot.dao.TEnumMapper" >
  <resultMap id="BaseResultMap" type="jpj.boot.entity.TEnum" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="icons" property="icons" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pid, code, name, icons, type, url,  `desc`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_enum
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_enum
    where code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="listByPid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_enum
    where pid = #{pid,jdbcType=INTEGER}
    ORDER BY `desc`
  </select>
  <select id="countByPid" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select
    count(1)
    from t_enum
    where pid = #{pid,jdbcType=INTEGER}
  </select>

  <select id="listEnumDtoAllByPid" parameterType="java.lang.Integer" resultType="jpj.boot.dto.EnumDto" >
    select
    te.id pid,
    te.code id,
    te.name text,
    te.url,
    te.type,
    te.`desc`
    from t_enum te
    where te.pid=#{pid, jdbcType=INTEGER}
    ORDER BY te.`desc`
  </select>

  <select id="listChildByPidAndRoleId" resultType="jpj.boot.dto.EnumDto" >
    select
    te.id pid,
    te.code id,
    te.name text,
    te.url,
    te.type,
    te.`desc`
    from t_role_enum tre
    LEFT JOIN t_enum te
    ON tre.enum_id = te.id
    where tre.role_id=#{roleId} AND te.pid=#{pid}
    ORDER BY te.`desc`
  </select>
    <select id="countChildByPidAndRoleId" resultType="java.lang.Integer" >
        select
        count(1)
        from t_role_enum tre
        LEFT JOIN t_enum te
        ON tre.enum_id = te.id
        where tre.role_id=#{roleId} AND te.pid=#{pid}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_enum
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteRoleEnumByEnumId" parameterType="java.lang.Integer" >
    delete from t_role_enum
    where enum_id  = #{enumId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="jpj.boot.entity.TEnum" >
    insert into t_enum (id, pid, code, 
      name, icons, type, 
      url,`desc`)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{icons,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{url,jdbcType=VARCHAR}, #{desc,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="jpj.boot.entity.TEnum" >
    insert into t_enum
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="icons != null" >
        icons,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="icons != null" >
        #{icons,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jpj.boot.entity.TEnum" >
    update t_enum
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="icons != null" >
        icons = #{icons,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jpj.boot.entity.TEnum" >
    update t_enum
    set pid = #{pid,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icons = #{icons,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      url = #{url,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>